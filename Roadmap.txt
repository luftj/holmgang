==========
=  Todo  =
==========

Concept
-where to store ai behaviour in maps? [1]
-equipped items as separate sprites with scenegraph? or exhaustive tilesets?
-world simulation outside viewport

UI
-HUD
--runes
-other
--inventory screen etc
--dialog screens?


Gamestate
-start new game with:
--resetting state
--loading from map
-resume game with loading from savestate
-save game

Map handling
-load spawn points from object layer. -> point objects in object layer -> entityfactory interface. consider [1]

Gameplay
-character actions/states
--attacks
---attack speed
--duck?
--block
--roll
--dash/sprint
-equipment/items
[X]picking up items
--equipping/unequipping items
--dropping items
--drawing equipped items
--stats
--state, condition
--leveling
--highlight hovered-over items -> pickerSystem -> manipulate spriteComponent if has<PickableComponent>

AI
-pathfinding
--navmesh?
-more precise collision for ai (at least onscreen)
-factions/friend-or-foe detection
-collision with other characters

Particle system and environmental effects
-weapon swoosh
-blood
-fire
-light and shadow -> apply effect when drawing map?

Environment interaction
-doors/map changes -> place in collision layer of map
-talking to npc
-using usable things?
-movement speed -> place in collision layer of map

menues
-options
--screen resolution
--fullscreen
-layouting

=============
=  Roadmap  =
=============

v0.1

v0.5 FIRST PLAYABLE
- major gameplay implemented
- first level complete
- asset pipeline complete

v0.8 ALPHA
-feature complete
- playable
- only tweaking of code from here
- assets partially finished

v0.9 BETA
-code freeze -> only bugfixing from here on out
-feature and asset complete

v1.0 RELEASE